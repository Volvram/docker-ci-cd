name: Docker Compose CI/CD

on:
  push:
    branches: [ "main" ]

env:
  APP_VERSION: ${{ github.sha }}  # Версия = хеш коммита

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker and Docker Compose
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Сборка node-optimized (production)
      - name: Build node-optimized
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-optimized:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-optimized:${{ env.APP_VERSION }}

      # Сборка node-regular (development)
      - name: Build node-regular
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile_non_optimized
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-regular:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-regular:${{ env.APP_VERSION }}

      - name: Start containers with Docker Compose
        run: |
          docker run -d --name mongo -p 27017:27017 \
            -v mongo_data:/data/db \
            mongo:6 \
          
          echo "Waiting for MongoDB to start..."
          while ! docker exec mongo mongosh --eval "db.adminCommand('ping')" >/dev/null 2>&1; do
            sleep 2
          done
          
          docker run -d --name node-optimized \
            -p 3001:3000 \
            -e NODE_ENV=production \
            --link mongo \
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-optimized:${{ env.APP_VERSION }}
          
          docker run -d --name node-regular \
            -p 3000:3000 \
            -e NODE_ENV=development \
            --link mongo \
            ${{ secrets.DOCKER_HUB_USERNAME }}/node-regular:${{ env.APP_VERSION }}
          
          docker run -d --name nginx \
            -p 80:80 \
            -v $(pwd)/nginx/nginx.conf:/etc/nginx/conf.d/default.conf \
            --link node-optimized \
            nginx:alpine

      - name: Verify services
        run: |
          docker ps -a
          curl --retry 5 --retry-delay 3 --retry-all-errors http://localhost:3001